<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/shara/OneDrive/Great Lakes/SQL/Project/New Orders.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser query pragmas" current="2"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="150"/><column_width id="3" width="2941"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainADDRESS"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="ADDRESS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="147"/><column index="2" value="300"/><column index="3" value="300"/><column index="4" value="170"/><column index="5" value="147"/><column index="6" value="105"/><column index="7" value="110"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="CARTON" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="134"/><column index="2" value="61"/><column index="3" value="85"/><column index="4" value="91"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ONLINE_CUSTOMER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="163"/><column index="2" value="209"/><column index="3" value="208"/><column index="4" value="270"/><column index="5" value="208"/><column index="6" value="147"/><column index="7" value="300"/><column index="8" value="252"/><column index="9" value="222"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDER_HEADER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="122"/><column index="2" value="163"/><column index="4" value="176"/><column index="5" value="182"/><column index="6" value="175"/><column index="7" value="271"/><column index="8" value="141"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDER_ITEMS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="122"/><column index="2" value="148"/><column index="3" value="229"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="2" mode="0"/></sort><column_widths><column index="1" value="148"/><column index="2" value="300"/><column index="3" value="255"/><column index="4" value="186"/><column index="5" value="300"/><column index="6" value="61"/><column index="7" value="85"/><column index="8" value="91"/><column index="9" value="97"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT_CLASS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="255"/><column index="2" value="253"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="SHIPPER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="141"/><column index="2" value="175"/><column index="3" value="186"/><column index="4" value="213"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">/*Write a query to Display the product details (product_class_code, product_id, product_desc, product_price,) 
as per the following criteria and sort them in descending order of category: 
a. If the category is 2050, increase the price by 2000 
b. If the category is 2051, increase the price by 500 
c. If the category is 2052, increase the price by 600
Hint: Use case statement. no permanent change in table required. (60 ROWS) [NOTE: PRODUCT TABLE]*/

select PRODUCT_CLASS_CODE,PRODUCT_ID,PRODUCT_DESC,PRODUCT_PRICE,
CASE
when PRODUCT_CLASS_CODE = '2050' THEN ( (PRODUCT_PRICE + 2000))
when PRODUCT_CLASS_CODE = '2051' THEN ( (PRODUCT_PRICE +500))
WHEN PRODUCT_CLASS_CODE = '2052' THEN ( (PRODUCT_PRICE + 600))
else PRODUCT_PRICE
END as new_price FROM PRODUCT
ORDER by PRODUCT_CLASS_CODE ASC; 


/*Write a query to display (product_class_desc, product_id, product_desc, product_quantity_avail ) and Show inventory status of products 
as below as per their available quantity: 
a. For Electronics and Computer categories, if available quantity is &lt;= 10, show 'Low stock', 11 &lt;= qty &lt;= 30, show 'In stock', &gt;= 31, show 'Enough stock' 
b. For Stationery and Clothes categories, if qty &lt;= 20, show 'Low stock', 21 &lt;= qty &lt;= 80, show 'In stock', &gt;= 81, show 'Enough stock' 
c. Rest of the categories, if qty &lt;= 15 – 'Low Stock', 16 &lt;= qty &lt;= 50 – 'In Stock', &gt;= 51 – 'Enough stock' For all categories, 
if available quantity is 0, show 'Out of stock'. Hint: Use case statement. (60 ROWS) [NOTE: TABLES TO BE USED – product, product_class]*/

SELECT pw.PRODUCT_CLASS_DESC,p.PRODUCT_QUANTITY_AVAIL,p.PRODUCT_ID,p.PRODUCT_DESC,
case 
when p.PRODUCT_QUANTITY_AVAIL = 0 then 'out of stock'
when pw.PRODUCT_CLASS_DESC in ('Electronics','Computer') then
case 
when p.PRODUCT_QUANTITY_AVAIL &lt;=10 THEN 'Low stock'
when p.PRODUCT_QUANTITY_AVAIL BETWEEN 11 and 30  then 'In stock'
when p.PRODUCT_QUANTITY_AVAIL &gt;= 31 THEN 'Enough stock'
END 
when pw.PRODUCT_CLASS_DESC in ('Stationery','Clothes') then
case 
when p.PRODUCT_QUANTITY_AVAIL &lt;=20 THEN 'Low stock'
when p.PRODUCT_QUANTITY_AVAIL BETWEEN 21 and 80  then 'In stock'
when p.PRODUCT_QUANTITY_AVAIL &gt;= 81 THEN 'Enough stock'
END 
WHEN p. PRODUCT_QUANTITY_AVAIL &lt;= 15 then 'Low stock'
WHEN p. PRODUCT_QUANTITY_AVAIL BETWEEN 16 and 50 then 'In stock'
when p. PRODUCT_QUANTITY_AVAIL &gt;= 51 THEN 'Enough stock'
END as stock_availability
from PRODUCT p
INNER JOIN PRODUCT_CLASS pw on p.PRODUCT_CLASS_CODE=pw.PRODUCT_CLASS_CODE
ORDER by PRODUCT_CLASS_DESC; 


3./* Write a query to Show the count of cities in all countries other than USA &amp; MALAYSIA, 
with more than 1 city, in the descending order of CITIES. 
(2 rows) [NOTE: ADDRESS TABLE, Do not use Distinct]*/

SELECT count(ADDRESS.CITY)cities,ADDRESS.COUNTRY
from ADDRESS 
where NOT COUNTRY='USA' and NOT country='Malaysia' 
GROUP by COUNTRY 
having count(CITY) &gt; 2
order by count(CITY) DESC;

/*Write a query to display the customer_id,customer full name ,city,pincode,and 
order details (order id, product class desc, product desc, subtotal(product_quantity * product_price)) 
for orders shipped to cities whose pin codes do not have any 0s in them. Sort the output on customer name and subtotal. (52 ROWS) 
[NOTE: TABLE TO BE USED - online_customer, address, order_header, order_items, product, product_class]*/

select oc.CUSTOMER_ID,oc.CUSTOMER_FNAME||oc.CUSTOMER_LNAME full_name,ad.CITY,ad.PINCODE,oh.ORDER_ID,pc.PRODUCT_CLASS_DESC,p.PRODUCT_DESC,
oi.PRODUCT_QUANTITY* p.PRODUCT_PRICE subtotal
from ADDRESS ad
INNER join ONLINE_CUSTOMER oc on ad.ADDRESS_ID=oc.ADDRESS_ID
INNER JOIN ORDER_HEADER oh on oc.CUSTOMER_ID=oh.CUSTOMER_ID
INNER join ORDER_ITEMS oi on oh.ORDER_ID=oi.ORDER_ID
INNER JOIN product p on oi.PRODUCT_ID=p.PRODUCT_ID
INNER JOIN PRODUCT_CLASS pc on p.PRODUCT_CLASS_CODE=pc.PRODUCT_CLASS_CODE
WHERE ad.PINCODE not like '%0%' and ORDER_STATUS='Shipped'  
order by full_name,subtotal;

-- Write a Query to display product id,product description,totalquantity(sum(product quantity) 
-- for an item which has been bought maximum no. of times (Quantity Wise) along with product id 201. 
-- (USE SUB-QUERY) (1 ROW) [NOTE: ORDER_ITEMS TABLE, PRODUCT TABLE]

SELECT p.PRODUCT_ID,p.PRODUCT_DESC,sum(oi.PRODUCT_QUANTITY)total_qty
from PRODUCT p
INNER join ORDER_ITEMS oi on p.PRODUCT_ID=oi.PRODUCT_ID
WHERE oi.ORDER_ID in 
(SELECT ORDER_ID FROM ORDER_ITEMS WHERE PRODUCT_ID ='201')
GROUP by oi.PRODUCT_ID
order by total_qty DESC LIMIT 1;

-- Write a query to display the customer_id,customer name, email and order details (order id, product desc,product qty,
-- subtotal(product_quantity * product_price)) for all customers even if they have not ordered any item.(225 ROWS) 
-- [NOTE: TABLE TO BE USED - online_customer, order_header, order_items, product]


select oc.customer_id,oc.customer_fname||oc.customer_lname full_name,oc.CUSTOMER_EMAIL,oh.ORDER_ID,
oi.product_quantity,p.product_desc,oi.PRODUCT_QUANTITY*p.PRODUCT_PRICE sub_total
from online_customer oc
left join order_header oh 
on oc.CUSTOMER_ID = oh.CUSTOMER_ID
left join order_items oi
on oh.ORDER_ID=oi.ORDER_ID
left join product p
on oi.PRODUCT_ID=p.PRODUCT_ID;





























</sql><current_tab id="0"/></tab_sql></sqlb_project>
